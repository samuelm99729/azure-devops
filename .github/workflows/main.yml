name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1Ô∏è‚É£ Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # 2Ô∏è‚É£ Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    # 3Ô∏è‚É£ Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # 4Ô∏è‚É£ Run unit tests
    - name: Run tests
      run: |
        python -m pytest tests/ -v

    # 5Ô∏è‚É£ Build Docker image
    - name: Build Docker image
      run: |
        docker build -t feedback-app:${{ github.sha }} .

    # 6Ô∏è‚É£ Login to Azure Container Registry
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.AZURE_CLIENT_ID }}
        password: ${{ secrets.AZURE_CLIENT_SECRET }}

    # 7Ô∏è‚É£ Push Docker image to ACR
    - name: Push Docker image to ACR
      run: |
        docker tag feedback-app:${{ github.sha }} ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/feedback-app:${{ github.sha }}
        docker push ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/feedback-app:${{ github.sha }}

    # 8Ô∏è‚É£ Login to Azure
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # 9Ô∏è‚É£ Set AKS context (using your existing cluster)
    - name: Set AKS Context
      uses: azure/aks-set-context@v3
      with:
        resource-group: feedback-rg
        cluster-name: feedback-aks
        subscription: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # üîü Deploy updated image to AKS
    - name: Deploy to AKS
      run: |
        sed -i 's|samuelmdevopsacr.azurecr.io/feedback-app:latest|${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/feedback-app:${{ github.sha }}|g' k8s/deployment.yaml
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl rollout status deployment/feedback-app-deployment
